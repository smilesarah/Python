{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/smilesarah/Python/blob/main/Sales_Database_Joining_Tables\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sv98p-taO0fD"
      },
      "source": [
        "Original Author : UTSAV AWASTHI\n",
        "\n",
        "Modified By: JOE GANSER"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7Jabr3KnO0fG"
      },
      "source": [
        "<h2> Importing Datasets </h2>\n",
        "Let's import the relevant datasets on which we will run SQL queries. Press Ctrl+Enter to run the codes in each of the boxes below.<br><br>\n",
        "I highly advice you to download the excel file (available <a href=\"https://github.com/ItsAwSM/SQL-for-Data-Analytics/blob/main/sales_database.xlsx?raw=true\">here</a>) which has the schema and the data which we will query in this assignment. Spend some time to go through the schema, understand the relationships between different datasets and then analyze all the datasets in excel once. "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "t0492vdfO0fI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "903df836-9b24-42f6-f2e6-330a48bc0160"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: xlrd in /usr/local/lib/python3.10/dist-packages (2.0.1)\n"
          ]
        }
      ],
      "source": [
        "!pip install xlrd\n",
        "import pandas as pd\n",
        "import sqlite3\n",
        "conn = sqlite3.connect(':memory:')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "yvXAcFJPO0fI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "ca1f04a0-fb41-4904-c26a-d829ba15b1b6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    cust_id first_name last_name                     email       phone  \\\n",
              "0  10000001      Rahul     Gupta     rahul.gupta@gmail.com  8960722319   \n",
              "1  10000002    Abhinav    Sharma  abhinav.sharma@gmail.com  8857852863   \n",
              "2  10000003    Anubhav     Patel   anubhav.patel@gmail.com  8492146048   \n",
              "3  10000004       Neha     Verma      neha.verma@gmail.com  8631861914   \n",
              "4  10000005       John   Bernard    john.bernard@gmail.com  8215391844   \n",
              "\n",
              "   primary_pincode  gender         dob joining_date  \n",
              "0           110001    male  02-12-1977   19-02-2016  \n",
              "1           400001    male  20-09-1995   01-10-2016  \n",
              "2           560001    male  26-12-1986   16-08-2018  \n",
              "3           600001  female  20-01-2002   28-07-2009  \n",
              "4           500001    male         NaN   05-03-2017  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0cf99c4e-03e8-4c8f-833f-b5ee1610fa15\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>cust_id</th>\n",
              "      <th>first_name</th>\n",
              "      <th>last_name</th>\n",
              "      <th>email</th>\n",
              "      <th>phone</th>\n",
              "      <th>primary_pincode</th>\n",
              "      <th>gender</th>\n",
              "      <th>dob</th>\n",
              "      <th>joining_date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10000001</td>\n",
              "      <td>Rahul</td>\n",
              "      <td>Gupta</td>\n",
              "      <td>rahul.gupta@gmail.com</td>\n",
              "      <td>8960722319</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>02-12-1977</td>\n",
              "      <td>19-02-2016</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10000002</td>\n",
              "      <td>Abhinav</td>\n",
              "      <td>Sharma</td>\n",
              "      <td>abhinav.sharma@gmail.com</td>\n",
              "      <td>8857852863</td>\n",
              "      <td>400001</td>\n",
              "      <td>male</td>\n",
              "      <td>20-09-1995</td>\n",
              "      <td>01-10-2016</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10000003</td>\n",
              "      <td>Anubhav</td>\n",
              "      <td>Patel</td>\n",
              "      <td>anubhav.patel@gmail.com</td>\n",
              "      <td>8492146048</td>\n",
              "      <td>560001</td>\n",
              "      <td>male</td>\n",
              "      <td>26-12-1986</td>\n",
              "      <td>16-08-2018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10000004</td>\n",
              "      <td>Neha</td>\n",
              "      <td>Verma</td>\n",
              "      <td>neha.verma@gmail.com</td>\n",
              "      <td>8631861914</td>\n",
              "      <td>600001</td>\n",
              "      <td>female</td>\n",
              "      <td>20-01-2002</td>\n",
              "      <td>28-07-2009</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10000005</td>\n",
              "      <td>John</td>\n",
              "      <td>Bernard</td>\n",
              "      <td>john.bernard@gmail.com</td>\n",
              "      <td>8215391844</td>\n",
              "      <td>500001</td>\n",
              "      <td>male</td>\n",
              "      <td>NaN</td>\n",
              "      <td>05-03-2017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0cf99c4e-03e8-4c8f-833f-b5ee1610fa15')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0cf99c4e-03e8-4c8f-833f-b5ee1610fa15 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0cf99c4e-03e8-4c8f-833f-b5ee1610fa15');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "#Importing customer dataset\n",
        "customer = pd.read_excel(\"https://github.com/ItsAwSM/SQL-for-Data-Analytics/blob/main/sales_database.xlsx?raw=true\",sheet_name=\"customer_dim\")\n",
        "customer.to_sql('customer',conn,if_exists='replace',index=False)\n",
        "customer.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "hH3vQ4XCO0fI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "b57eaa62-d43f-4abf-d6c7-98694df0b3fb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   product_id     product_name brand  category  procurement_cost_per_unit  \\\n",
              "0       12345     HP XYZ Mouse    HP     mouse                        650   \n",
              "1       12346          HP 241H    HP    laptop                      45000   \n",
              "2       12347  HP 8GB Pendrive    HP  pendrive                        350   \n",
              "3       12348   Dell ABC Mouse  Dell     mouse                        350   \n",
              "4       12349       Dell AX420  Dell    laptop                      30000   \n",
              "\n",
              "     mrp  \n",
              "0   1500  \n",
              "1  80000  \n",
              "2    800  \n",
              "3   1100  \n",
              "4  75000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9069b72b-b6ff-424d-83d4-ee7f278cec92\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>product_id</th>\n",
              "      <th>product_name</th>\n",
              "      <th>brand</th>\n",
              "      <th>category</th>\n",
              "      <th>procurement_cost_per_unit</th>\n",
              "      <th>mrp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>12345</td>\n",
              "      <td>HP XYZ Mouse</td>\n",
              "      <td>HP</td>\n",
              "      <td>mouse</td>\n",
              "      <td>650</td>\n",
              "      <td>1500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>12346</td>\n",
              "      <td>HP 241H</td>\n",
              "      <td>HP</td>\n",
              "      <td>laptop</td>\n",
              "      <td>45000</td>\n",
              "      <td>80000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>12347</td>\n",
              "      <td>HP 8GB Pendrive</td>\n",
              "      <td>HP</td>\n",
              "      <td>pendrive</td>\n",
              "      <td>350</td>\n",
              "      <td>800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12348</td>\n",
              "      <td>Dell ABC Mouse</td>\n",
              "      <td>Dell</td>\n",
              "      <td>mouse</td>\n",
              "      <td>350</td>\n",
              "      <td>1100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>12349</td>\n",
              "      <td>Dell AX420</td>\n",
              "      <td>Dell</td>\n",
              "      <td>laptop</td>\n",
              "      <td>30000</td>\n",
              "      <td>75000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9069b72b-b6ff-424d-83d4-ee7f278cec92')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9069b72b-b6ff-424d-83d4-ee7f278cec92 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9069b72b-b6ff-424d-83d4-ee7f278cec92');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "#Importing product dataset\n",
        "product = pd.read_excel(\"https://github.com/ItsAwSM/SQL-for-Data-Analytics/blob/main/sales_database.xlsx?raw=true\",sheet_name=\"product_dim\")\n",
        "product.to_sql('product',conn,if_exists='replace',index=False)\n",
        "product.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Using the two examples above as imports, fill in the commented out values to load the orders table from github."
      ],
      "metadata": {
        "id": "SlUIg3YpsMyA"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "scrolled": false,
        "id": "3qpfH_A4O0fJ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "outputId": "837a7b74-b3ee-4d24-8d2d-bbdc579566c9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      order_id order_type   cust_id  order_date delivery_date  tot_units  \\\n",
              "0  10000000001        buy  10000009  01-01-2020    03-01-2020          2   \n",
              "1  10000000002        buy  10000004  01-01-2020    04-01-2020          9   \n",
              "2  10000000003        buy  10000012  01-01-2020    02-01-2020          2   \n",
              "3  10000000004        buy  10000012  01-01-2020    03-01-2020          8   \n",
              "4  10000000005        buy  10000008  01-01-2020    06-01-2020          1   \n",
              "\n",
              "   displayed_selling_price_per_unit  total_amount_paid  product_id  \\\n",
              "0                             73500             138180       12349   \n",
              "1                             67500             577125       12349   \n",
              "2                             60750             119070       12349   \n",
              "3                               736               5824       12347   \n",
              "4                             60750              57105       12349   \n",
              "\n",
              "   delivery_person_id payment_type  delivery_pincode  \n",
              "0             1000003         cash            500001  \n",
              "1             1000005         cash            700001  \n",
              "2             1000002   netbanking            400001  \n",
              "3             1000010         cash            600001  \n",
              "4             1000003        debit            500001  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-97289811-4598-4508-ba1e-0d930f3cc571\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>order_id</th>\n",
              "      <th>order_type</th>\n",
              "      <th>cust_id</th>\n",
              "      <th>order_date</th>\n",
              "      <th>delivery_date</th>\n",
              "      <th>tot_units</th>\n",
              "      <th>displayed_selling_price_per_unit</th>\n",
              "      <th>total_amount_paid</th>\n",
              "      <th>product_id</th>\n",
              "      <th>delivery_person_id</th>\n",
              "      <th>payment_type</th>\n",
              "      <th>delivery_pincode</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10000000001</td>\n",
              "      <td>buy</td>\n",
              "      <td>10000009</td>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>03-01-2020</td>\n",
              "      <td>2</td>\n",
              "      <td>73500</td>\n",
              "      <td>138180</td>\n",
              "      <td>12349</td>\n",
              "      <td>1000003</td>\n",
              "      <td>cash</td>\n",
              "      <td>500001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10000000002</td>\n",
              "      <td>buy</td>\n",
              "      <td>10000004</td>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>04-01-2020</td>\n",
              "      <td>9</td>\n",
              "      <td>67500</td>\n",
              "      <td>577125</td>\n",
              "      <td>12349</td>\n",
              "      <td>1000005</td>\n",
              "      <td>cash</td>\n",
              "      <td>700001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10000000003</td>\n",
              "      <td>buy</td>\n",
              "      <td>10000012</td>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>02-01-2020</td>\n",
              "      <td>2</td>\n",
              "      <td>60750</td>\n",
              "      <td>119070</td>\n",
              "      <td>12349</td>\n",
              "      <td>1000002</td>\n",
              "      <td>netbanking</td>\n",
              "      <td>400001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10000000004</td>\n",
              "      <td>buy</td>\n",
              "      <td>10000012</td>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>03-01-2020</td>\n",
              "      <td>8</td>\n",
              "      <td>736</td>\n",
              "      <td>5824</td>\n",
              "      <td>12347</td>\n",
              "      <td>1000010</td>\n",
              "      <td>cash</td>\n",
              "      <td>600001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10000000005</td>\n",
              "      <td>buy</td>\n",
              "      <td>10000008</td>\n",
              "      <td>01-01-2020</td>\n",
              "      <td>06-01-2020</td>\n",
              "      <td>1</td>\n",
              "      <td>60750</td>\n",
              "      <td>57105</td>\n",
              "      <td>12349</td>\n",
              "      <td>1000003</td>\n",
              "      <td>debit</td>\n",
              "      <td>500001</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97289811-4598-4508-ba1e-0d930f3cc571')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-97289811-4598-4508-ba1e-0d930f3cc571 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-97289811-4598-4508-ba1e-0d930f3cc571');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "#Importing order dataset\n",
        "table_link = \"https://github.com/ItsAwSM/SQL-for-Data-Analytics/blob/main/sales_database.xlsx?raw=true\"\n",
        "sheet_name = \"order_dim\"\n",
        "table_name = \"orders\"\n",
        "\n",
        "order = pd.read_excel(\"https://github.com/ItsAwSM/SQL-for-Data-Analytics/blob/main/sales_database.xlsx?raw=true\",sheet_name=\"order_dim\")\n",
        "order.to_sql('orders',conn,if_exists='replace',index=False)\n",
        "order.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sH7xwjo_O0fJ"
      },
      "source": [
        "<b>Q0.</b> How many customers are male and how many are female?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "_8yK8VHzO0fJ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "outputId": "1f1e7229-6e7b-4467-efb9-30de335e2293"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   gender  COUNT(*)\n",
              "0  female         4\n",
              "1    male        10"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f7d17266-c211-4ee1-ad30-7460e466878a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>gender</th>\n",
              "      <th>COUNT(*)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>female</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>male</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7d17266-c211-4ee1-ad30-7460e466878a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f7d17266-c211-4ee1-ad30-7460e466878a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f7d17266-c211-4ee1-ad30-7460e466878a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "query0 = '''\n",
        "SELECT gender, COUNT(*) \n",
        "FROM customer \n",
        "GROUP BY gender;\n",
        "'''\n",
        "pd.read_sql_query(query0,conn)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dyYEN80DO0fJ"
      },
      "source": [
        "<b>Q1.</b> How many customers do not have DOB information available?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "GH0Ui8x-O0fK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "outputId": "8f2c3650-9ace-4322-f830-013a249e2eed"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   cnt_no_DOB\n",
              "0           2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3e8ccec2-a57e-41df-90cd-86b9e1705bfb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>cnt_no_DOB</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e8ccec2-a57e-41df-90cd-86b9e1705bfb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3e8ccec2-a57e-41df-90cd-86b9e1705bfb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3e8ccec2-a57e-41df-90cd-86b9e1705bfb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "query1 = '''\n",
        "SELECT COUNT(cust_id) AS cnt_no_DOB\n",
        "FROM customer\n",
        "WHERE dob IS NULL;\n",
        "'''\n",
        "pd.read_sql_query(query1,conn)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rz6IFb2kO0fK"
      },
      "source": [
        "<b>Q2.</b> How many customers are there in each pincode and gender combination?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "id": "MlB2Q-uyO0fK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "outputId": "86aa1f0f-5adc-4e0b-a054-a1d8ab40e7c3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   primary_pincode  gender  cust_cnt\n",
              "0           110001    male         3\n",
              "1           400001    male         2\n",
              "2           500001  female         1\n",
              "3           500001    male         1\n",
              "4           560001  female         1\n",
              "5           560001    male         1\n",
              "6           600001  female         1\n",
              "7           600001    male         1\n",
              "8           700001  female         1\n",
              "9           700001    male         2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e1e52c0c-1031-49bc-9791-20fdd69a7664\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>primary_pincode</th>\n",
              "      <th>gender</th>\n",
              "      <th>cust_cnt</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>400001</td>\n",
              "      <td>male</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>500001</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>500001</td>\n",
              "      <td>male</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>560001</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>560001</td>\n",
              "      <td>male</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>600001</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>600001</td>\n",
              "      <td>male</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>700001</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>700001</td>\n",
              "      <td>male</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1e52c0c-1031-49bc-9791-20fdd69a7664')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e1e52c0c-1031-49bc-9791-20fdd69a7664 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e1e52c0c-1031-49bc-9791-20fdd69a7664');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "query2 = \"\"\"\n",
        "SELECT primary_pincode, gender, COUNT(*) AS cust_cnt\n",
        "FROM customer\n",
        "GROUP BY primary_pincode, gender;\n",
        "\"\"\"\n",
        "\n",
        "pd.read_sql_query(query2,conn)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Q3 For each `payment type`, find the avg, total and max values for `tot_units` and `total_amount_paid` columns of the `orders` table where the `order_type = 'buy'`. "
      ],
      "metadata": {
        "id": "79wIbQE2pGAY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "query = \"\"\"\n",
        "SELECT payment_type, AVG(tot_units), MAX(tot_units),\tSUM(tot_units),\tAVG(total_amount_paid),\tMAX(total_amount_paid),\tSUM(total_amount_paid)\n",
        "FROM orders\n",
        "WHERE order_type = 'buy'\n",
        "GROUP BY payment_type;\n",
        "\"\"\"\n",
        "\n",
        "pd.read_sql_query(query,conn)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "0OsNAgE1ojF7",
        "outputId": "1531b830-9d78-409d-f174-1bd2a72dd679"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  payment_type  AVG(tot_units)  MAX(tot_units)  SUM(tot_units)  \\\n",
              "0         cash        5.465021              10            1328   \n",
              "1       credit        5.524904              10            1442   \n",
              "2        debit        5.157025              10            1248   \n",
              "3   netbanking        5.311024              10            1349   \n",
              "\n",
              "   AVG(total_amount_paid)  MAX(total_amount_paid)  SUM(total_amount_paid)  \n",
              "0           129749.255144                  721280                31529069  \n",
              "1           121767.965517                  768240                31781439  \n",
              "2           105574.632231                  698400                25549061  \n",
              "3           118246.283465                  683850                30034556  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a77dab1-0e42-4c15-b2e0-af382152ecb9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>payment_type</th>\n",
              "      <th>AVG(tot_units)</th>\n",
              "      <th>MAX(tot_units)</th>\n",
              "      <th>SUM(tot_units)</th>\n",
              "      <th>AVG(total_amount_paid)</th>\n",
              "      <th>MAX(total_amount_paid)</th>\n",
              "      <th>SUM(total_amount_paid)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>cash</td>\n",
              "      <td>5.465021</td>\n",
              "      <td>10</td>\n",
              "      <td>1328</td>\n",
              "      <td>129749.255144</td>\n",
              "      <td>721280</td>\n",
              "      <td>31529069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>credit</td>\n",
              "      <td>5.524904</td>\n",
              "      <td>10</td>\n",
              "      <td>1442</td>\n",
              "      <td>121767.965517</td>\n",
              "      <td>768240</td>\n",
              "      <td>31781439</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>debit</td>\n",
              "      <td>5.157025</td>\n",
              "      <td>10</td>\n",
              "      <td>1248</td>\n",
              "      <td>105574.632231</td>\n",
              "      <td>698400</td>\n",
              "      <td>25549061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>netbanking</td>\n",
              "      <td>5.311024</td>\n",
              "      <td>10</td>\n",
              "      <td>1349</td>\n",
              "      <td>118246.283465</td>\n",
              "      <td>683850</td>\n",
              "      <td>30034556</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a77dab1-0e42-4c15-b2e0-af382152ecb9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7a77dab1-0e42-4c15-b2e0-af382152ecb9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7a77dab1-0e42-4c15-b2e0-af382152ecb9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Q4: From the `product` table, using a `CASE` statement to identify products from HP vs products by Dell, count how many HP products there are and how many Dell products."
      ],
      "metadata": {
        "id": "a2Wa8p99p9xo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "query = \"\"\"\n",
        "SELECT \n",
        "CASE WHEN product_name LIKE '%HP%' THEN 'HP'\n",
        "     WHEN product_name LIKE '%Dell%' THEN 'Dell'\n",
        "     ELSE NULL\n",
        "     END AS company, COUNT(*)\n",
        "FROM product\n",
        "GROUP BY company;\n",
        "\n",
        "\"\"\"\n",
        "\n",
        "pd.read_sql_query(query,conn)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "YlGCAPnJpwJN",
        "outputId": "04ebd0a9-e289-4b7e-96c2-8c7ba2e92097"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  company  COUNT(*)\n",
              "0    Dell         3\n",
              "1      HP         3"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-91727b75-1ecc-4d59-9b07-1c07caf1d083\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>company</th>\n",
              "      <th>COUNT(*)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Dell</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>HP</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-91727b75-1ecc-4d59-9b07-1c07caf1d083')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-91727b75-1ecc-4d59-9b07-1c07caf1d083 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-91727b75-1ecc-4d59-9b07-1c07caf1d083');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Q5: Join the customer, orders and product tables together. Examine each table (above) and determine that columns need to be joined. Use an inner join to connect the 3 tables."
      ],
      "metadata": {
        "id": "xqUAr6PooTSc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "query5 = \"\"\"\n",
        "SELECT c.*, o.*, p.*\n",
        "FROM customer AS c\n",
        "INNER JOIN orders AS o\n",
        "ON c.cust_id = o.cust_id\n",
        "INNER JOIN product AS p\n",
        "ON p.product_id = o.product_id\n",
        "\n",
        "\"\"\"\n",
        "\n",
        "pd.read_sql_query(query5,conn)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 835
        },
        "id": "ZUrO6-OTlLnd",
        "outputId": "c64beebd-fb7b-41bb-eebd-c5bea48bc716"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       cust_id first_name last_name                      email       phone  \\\n",
              "0     10000001      Rahul     Gupta      rahul.gupta@gmail.com  8960722319   \n",
              "1     10000001      Rahul     Gupta      rahul.gupta@gmail.com  8960722319   \n",
              "2     10000001      Rahul     Gupta      rahul.gupta@gmail.com  8960722319   \n",
              "3     10000001      Rahul     Gupta      rahul.gupta@gmail.com  8960722319   \n",
              "4     10000001      Rahul     Gupta      rahul.gupta@gmail.com  8960722319   \n",
              "...        ...        ...       ...                        ...         ...   \n",
              "1045  10000014  Amanpreet     Singh  amanpreet.singh@yahoo.com  8153506539   \n",
              "1046  10000014  Amanpreet     Singh  amanpreet.singh@yahoo.com  8153506539   \n",
              "1047  10000014  Amanpreet     Singh  amanpreet.singh@yahoo.com  8153506539   \n",
              "1048  10000014  Amanpreet     Singh  amanpreet.singh@yahoo.com  8153506539   \n",
              "1049  10000014  Amanpreet     Singh  amanpreet.singh@yahoo.com  8153506539   \n",
              "\n",
              "      primary_pincode gender         dob joining_date     order_id  ...  \\\n",
              "0              110001   male  02-12-1977   19-02-2016  10000000009  ...   \n",
              "1              110001   male  02-12-1977   19-02-2016  10000000031  ...   \n",
              "2              110001   male  02-12-1977   19-02-2016  10000000047  ...   \n",
              "3              110001   male  02-12-1977   19-02-2016  10000000076  ...   \n",
              "4              110001   male  02-12-1977   19-02-2016  10000000091  ...   \n",
              "...               ...    ...         ...          ...          ...  ...   \n",
              "1045           110001   male  10-03-1980   29-08-2008  10000000919  ...   \n",
              "1046           110001   male  10-03-1980   29-08-2008  10000000932  ...   \n",
              "1047           110001   male  10-03-1980   29-08-2008  10000000932  ...   \n",
              "1048           110001   male  10-03-1980   29-08-2008  10000000939  ...   \n",
              "1049           110001   male  10-03-1980   29-08-2008  10000000954  ...   \n",
              "\n",
              "      product_id  delivery_person_id payment_type delivery_pincode  \\\n",
              "0          12348             1000006         cash           400001   \n",
              "1          12346             1000001        debit           560001   \n",
              "2          12349             1000009       credit           400001   \n",
              "3          12346             1000005   netbanking           700001   \n",
              "4          12350             1000006   netbanking           400001   \n",
              "...          ...                 ...          ...              ...   \n",
              "1045       12347             1000008       credit           110001   \n",
              "1046       12346             1000007       credit           700001   \n",
              "1047       12346             1000007       credit           700001   \n",
              "1048       12345             1000008   netbanking           110001   \n",
              "1049       12348             1000001       credit           560001   \n",
              "\n",
              "      product_id       product_name  brand  category  \\\n",
              "0          12348     Dell ABC Mouse   Dell     mouse   \n",
              "1          12346            HP 241H     HP    laptop   \n",
              "2          12349         Dell AX420   Dell    laptop   \n",
              "3          12346            HP 241H     HP    laptop   \n",
              "4          12350  Dell 8GB Pendrive   Dell  pendrive   \n",
              "...          ...                ...    ...       ...   \n",
              "1045       12347    HP 8GB Pendrive     HP  pendrive   \n",
              "1046       12346            HP 241H     HP    laptop   \n",
              "1047       12346            HP 241H     HP    laptop   \n",
              "1048       12345       HP XYZ Mouse     HP     mouse   \n",
              "1049       12348     Dell ABC Mouse   Dell     mouse   \n",
              "\n",
              "      procurement_cost_per_unit    mrp  \n",
              "0                           350   1100  \n",
              "1                         45000  80000  \n",
              "2                         30000  75000  \n",
              "3                         45000  80000  \n",
              "4                           250    850  \n",
              "...                         ...    ...  \n",
              "1045                        350    800  \n",
              "1046                      45000  80000  \n",
              "1047                      45000  80000  \n",
              "1048                        650   1500  \n",
              "1049                        350   1100  \n",
              "\n",
              "[1050 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-08ea2573-c2d3-43ac-9920-387b8cdc9943\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>cust_id</th>\n",
              "      <th>first_name</th>\n",
              "      <th>last_name</th>\n",
              "      <th>email</th>\n",
              "      <th>phone</th>\n",
              "      <th>primary_pincode</th>\n",
              "      <th>gender</th>\n",
              "      <th>dob</th>\n",
              "      <th>joining_date</th>\n",
              "      <th>order_id</th>\n",
              "      <th>...</th>\n",
              "      <th>product_id</th>\n",
              "      <th>delivery_person_id</th>\n",
              "      <th>payment_type</th>\n",
              "      <th>delivery_pincode</th>\n",
              "      <th>product_id</th>\n",
              "      <th>product_name</th>\n",
              "      <th>brand</th>\n",
              "      <th>category</th>\n",
              "      <th>procurement_cost_per_unit</th>\n",
              "      <th>mrp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10000001</td>\n",
              "      <td>Rahul</td>\n",
              "      <td>Gupta</td>\n",
              "      <td>rahul.gupta@gmail.com</td>\n",
              "      <td>8960722319</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>02-12-1977</td>\n",
              "      <td>19-02-2016</td>\n",
              "      <td>10000000009</td>\n",
              "      <td>...</td>\n",
              "      <td>12348</td>\n",
              "      <td>1000006</td>\n",
              "      <td>cash</td>\n",
              "      <td>400001</td>\n",
              "      <td>12348</td>\n",
              "      <td>Dell ABC Mouse</td>\n",
              "      <td>Dell</td>\n",
              "      <td>mouse</td>\n",
              "      <td>350</td>\n",
              "      <td>1100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10000001</td>\n",
              "      <td>Rahul</td>\n",
              "      <td>Gupta</td>\n",
              "      <td>rahul.gupta@gmail.com</td>\n",
              "      <td>8960722319</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>02-12-1977</td>\n",
              "      <td>19-02-2016</td>\n",
              "      <td>10000000031</td>\n",
              "      <td>...</td>\n",
              "      <td>12346</td>\n",
              "      <td>1000001</td>\n",
              "      <td>debit</td>\n",
              "      <td>560001</td>\n",
              "      <td>12346</td>\n",
              "      <td>HP 241H</td>\n",
              "      <td>HP</td>\n",
              "      <td>laptop</td>\n",
              "      <td>45000</td>\n",
              "      <td>80000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10000001</td>\n",
              "      <td>Rahul</td>\n",
              "      <td>Gupta</td>\n",
              "      <td>rahul.gupta@gmail.com</td>\n",
              "      <td>8960722319</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>02-12-1977</td>\n",
              "      <td>19-02-2016</td>\n",
              "      <td>10000000047</td>\n",
              "      <td>...</td>\n",
              "      <td>12349</td>\n",
              "      <td>1000009</td>\n",
              "      <td>credit</td>\n",
              "      <td>400001</td>\n",
              "      <td>12349</td>\n",
              "      <td>Dell AX420</td>\n",
              "      <td>Dell</td>\n",
              "      <td>laptop</td>\n",
              "      <td>30000</td>\n",
              "      <td>75000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10000001</td>\n",
              "      <td>Rahul</td>\n",
              "      <td>Gupta</td>\n",
              "      <td>rahul.gupta@gmail.com</td>\n",
              "      <td>8960722319</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>02-12-1977</td>\n",
              "      <td>19-02-2016</td>\n",
              "      <td>10000000076</td>\n",
              "      <td>...</td>\n",
              "      <td>12346</td>\n",
              "      <td>1000005</td>\n",
              "      <td>netbanking</td>\n",
              "      <td>700001</td>\n",
              "      <td>12346</td>\n",
              "      <td>HP 241H</td>\n",
              "      <td>HP</td>\n",
              "      <td>laptop</td>\n",
              "      <td>45000</td>\n",
              "      <td>80000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10000001</td>\n",
              "      <td>Rahul</td>\n",
              "      <td>Gupta</td>\n",
              "      <td>rahul.gupta@gmail.com</td>\n",
              "      <td>8960722319</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>02-12-1977</td>\n",
              "      <td>19-02-2016</td>\n",
              "      <td>10000000091</td>\n",
              "      <td>...</td>\n",
              "      <td>12350</td>\n",
              "      <td>1000006</td>\n",
              "      <td>netbanking</td>\n",
              "      <td>400001</td>\n",
              "      <td>12350</td>\n",
              "      <td>Dell 8GB Pendrive</td>\n",
              "      <td>Dell</td>\n",
              "      <td>pendrive</td>\n",
              "      <td>250</td>\n",
              "      <td>850</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1045</th>\n",
              "      <td>10000014</td>\n",
              "      <td>Amanpreet</td>\n",
              "      <td>Singh</td>\n",
              "      <td>amanpreet.singh@yahoo.com</td>\n",
              "      <td>8153506539</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>10-03-1980</td>\n",
              "      <td>29-08-2008</td>\n",
              "      <td>10000000919</td>\n",
              "      <td>...</td>\n",
              "      <td>12347</td>\n",
              "      <td>1000008</td>\n",
              "      <td>credit</td>\n",
              "      <td>110001</td>\n",
              "      <td>12347</td>\n",
              "      <td>HP 8GB Pendrive</td>\n",
              "      <td>HP</td>\n",
              "      <td>pendrive</td>\n",
              "      <td>350</td>\n",
              "      <td>800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1046</th>\n",
              "      <td>10000014</td>\n",
              "      <td>Amanpreet</td>\n",
              "      <td>Singh</td>\n",
              "      <td>amanpreet.singh@yahoo.com</td>\n",
              "      <td>8153506539</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>10-03-1980</td>\n",
              "      <td>29-08-2008</td>\n",
              "      <td>10000000932</td>\n",
              "      <td>...</td>\n",
              "      <td>12346</td>\n",
              "      <td>1000007</td>\n",
              "      <td>credit</td>\n",
              "      <td>700001</td>\n",
              "      <td>12346</td>\n",
              "      <td>HP 241H</td>\n",
              "      <td>HP</td>\n",
              "      <td>laptop</td>\n",
              "      <td>45000</td>\n",
              "      <td>80000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1047</th>\n",
              "      <td>10000014</td>\n",
              "      <td>Amanpreet</td>\n",
              "      <td>Singh</td>\n",
              "      <td>amanpreet.singh@yahoo.com</td>\n",
              "      <td>8153506539</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>10-03-1980</td>\n",
              "      <td>29-08-2008</td>\n",
              "      <td>10000000932</td>\n",
              "      <td>...</td>\n",
              "      <td>12346</td>\n",
              "      <td>1000007</td>\n",
              "      <td>credit</td>\n",
              "      <td>700001</td>\n",
              "      <td>12346</td>\n",
              "      <td>HP 241H</td>\n",
              "      <td>HP</td>\n",
              "      <td>laptop</td>\n",
              "      <td>45000</td>\n",
              "      <td>80000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1048</th>\n",
              "      <td>10000014</td>\n",
              "      <td>Amanpreet</td>\n",
              "      <td>Singh</td>\n",
              "      <td>amanpreet.singh@yahoo.com</td>\n",
              "      <td>8153506539</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>10-03-1980</td>\n",
              "      <td>29-08-2008</td>\n",
              "      <td>10000000939</td>\n",
              "      <td>...</td>\n",
              "      <td>12345</td>\n",
              "      <td>1000008</td>\n",
              "      <td>netbanking</td>\n",
              "      <td>110001</td>\n",
              "      <td>12345</td>\n",
              "      <td>HP XYZ Mouse</td>\n",
              "      <td>HP</td>\n",
              "      <td>mouse</td>\n",
              "      <td>650</td>\n",
              "      <td>1500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1049</th>\n",
              "      <td>10000014</td>\n",
              "      <td>Amanpreet</td>\n",
              "      <td>Singh</td>\n",
              "      <td>amanpreet.singh@yahoo.com</td>\n",
              "      <td>8153506539</td>\n",
              "      <td>110001</td>\n",
              "      <td>male</td>\n",
              "      <td>10-03-1980</td>\n",
              "      <td>29-08-2008</td>\n",
              "      <td>10000000954</td>\n",
              "      <td>...</td>\n",
              "      <td>12348</td>\n",
              "      <td>1000001</td>\n",
              "      <td>credit</td>\n",
              "      <td>560001</td>\n",
              "      <td>12348</td>\n",
              "      <td>Dell ABC Mouse</td>\n",
              "      <td>Dell</td>\n",
              "      <td>mouse</td>\n",
              "      <td>350</td>\n",
              "      <td>1100</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1050 rows × 27 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08ea2573-c2d3-43ac-9920-387b8cdc9943')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-08ea2573-c2d3-43ac-9920-387b8cdc9943 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-08ea2573-c2d3-43ac-9920-387b8cdc9943');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.3"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}